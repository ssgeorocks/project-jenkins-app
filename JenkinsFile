pipeline {
    agent any

    environment{
        NETLIFY_SITE_ID = '0047a380-8c98-4bf5-9552-2d7552d07518'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
    }

    stages {
        ///* 
        //This is a comment in Jenkins.
        stage('Build w/ Docker') {
            agent{
                docker{
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        }
        //        */
        
        stage('Run Tests'){
            parallel{
                stage('Unit Tests w/ Docker'){
                    agent{
                        docker{
                            image 'node:18-alpine'
                            reuseNode true
                        }
                    }
                    steps{
                        sh '''
                            echo "Starting test stage"
                            touch test_checking_htmlfile.txt
                            ls -la build >> test_checking_htmlfile.txt
                            grep "index.html" test_checking_htmlfile.txt || echo "Test Failed: File not found"
                            npm test
                        '''
                    }

                    post {
                        always {
                            junit 'jest-results/junit.xml'
                            //publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }
                }

                stage('E2E w/ Docker'){
                    agent{
                        docker{
                            image 'mcr.microsoft.com/playwright:v1.55.0-noble'
                            reuseNode true
                        }
                    }
                    steps{
                        sh '''
                            npm install serve
                            node_modules/.bin/serve -s build &
                            sleep 10
                            npx playwright test --reporter=html
                        '''
                    }

                    post {
                        always {
                            //junit 'jest-results/junit.xml'
                            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }
                }  
            }
        }
          
        stage('Deploy') {
            agent{
                docker{
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                npm install netlify-cli@20.1.1
                node_modules/.bin/netlify --version
                echo "Deplyoing to production. Site ID 0047a380-8c98-4bf5-9552-2d7552d07518"
                ode_modules/.bin/netlify status
                ode_modules/.bin/netlify deploy --dir=build --prod
                '''
            }
        }       
    }
}